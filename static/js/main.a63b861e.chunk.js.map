{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/images/iconmen.png","components/assets/images/loader.svg","api/api.tsx","redux/state.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","redux/user-reducer.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UserFunc.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/login/Login.tsx","redux/app-reducer.tsx","redux/login-reducer.tsx","redux/redux-store.tsx","App.tsx","hoc/withSuspence.tsx","index.tsx","components/common/ToggleIsFetching.tsx","components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.tsx","redux/profile-reducer.tsx","utils/validators/validators.ts","redux/dialogs-reducer.tsx","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollowUsers","userId","delete","followUsers","post","getProfile","profileAPI","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","authAPI","me","res","authUsers","login","email","password","rememberMe","captcha","logOut","store","_state","profilePage","posts","id","message","countLikes","newPostText","dialogsPage","dialogs","name","messages","newMessageText","getState","this","subsCribe","observer","rerenderEntireTree","state","console","log","dispatch","action","profileReducer","dialogsReducer","Navbar","bestFriends","map","friend","key","className","classes","nav","item","to","activeClassName","active","myBestFriends","News","Music","Settings","updateObjectInArray","items","itemId","objPropsName","newObjProps","u","initialState","users","totalUsersCount","isFetching","followingInProgress","follow","type","unFollow","setCurrentPage","toggleIsFetching","isFollowingInProgress","usersReducer","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","styles","selectPage","e","User","props","src","photos","small","userPhoto","disabled","some","unFollowThunkCreator","followThunkCreator","Users","getUsersSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","auth","isAuth","UsersContainer","pageNumber","getUsersTC","ToggleIsFetching","React","Component","compose","connect","userID","a","resultCode","page","Header","header","icon","faShip","loginBlock","loginOutTC","SET_USER_DATA","captchaUrl","setUserData","payload","getAuthUserData","getCaptchaUrlTC","captchaURL","url","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","style","formSummaryError","Login","useSelector","useDispatch","length","stopSubmit","_error","initialized","appReducer","reducers","combineReducers","formReducer","loginPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeAppTC","addEventListener","removeEventListener","exact","path","render","Suspense","fallback","AppContainer","withRouter","Promise","all","SocialTSApp","ReactDOM","document","getElementById","preLoader","Textarea","input","meta","hasError","touched","formControl","addPostActionCreator","setStatusUpdate","getUserProfile","getUserStatus","getUpdateUserStatus","getSavePhotoTC","file","photo","getSaveInfoTC","userIds","reject","newPost","postId","value","maxLengthCreator","maxLength","addMessageCreator","newMessage","stateCopy"],"mappings":"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","file":"static/js/main.a63b861e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"myBestFriends\":\"Navbar_myBestFriends__rk03E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectPage\":\"users_selectPage__3t1bg\"};","module.exports = __webpack_public_path__ + \"static/media/iconmen.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.79c69891.svg\";","import React from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"53444f05-2fd9-4762-9034-1b37fffb3067\"\n    }\n})\n\n\nexport const userAPI = {\n    getUsers(currentPage:number, pageSize:number) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then((response: any) => {\n                return response.data\n            });\n    },\n\n\n    unFollowUsers(userId: number) {\n        return instance.delete(`follow/${userId}`)//когда хотим отписаться нужен delete\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    followUsers(userId: number) {\n        return instance.post(`follow/${userId}`)//когда хотим отписаться нужен delete\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    getProfile(userId: number) {\n        return instance.get(`profile/${userId}/`)\n    }\n\n}\n\nexport const profileAPI = {\n\n    getProfile(userId: any) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status:any){\n        return instance.put('profile/status/',{status:status})\n    },\n       saveProfile(profile:any){\n        return instance.put('profile',profile)\n    },\n\n    savePhoto(photoFile:any){\n    const formData = new FormData();\n    formData.append('image',photoFile )\n\n    return instance.put('profile/photo',formData,{\n    headers:{\n            'Content-Type':'multipart/form-data'\n            }\n        })\n    }\n\n}\nexport const securityAPI = {\n  getCaptchaUrl(){\n    return instance.get('security/get-captcha-url')\n    }\n    }\n\nexport const authAPI = {\n     me(){\n    return instance.get<ResponseType<AuthMeType>>('auth/me').then(res => res.data)\n    },\n\n    authUsers() {\n        return instance.get(\"auth/me\")\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    login(email:string,password:string,rememberMe:boolean = false, captcha:any=null){\n    return instance.post(`auth/login`,{email,password,rememberMe,captcha});\n    },\n    logOut(){\n    return instance.delete(`auth/login`);\n    }\n\n}\n\nexport type AuthMeType = {\n    email: string\n    login: string\n    id: number\n}\n\ntype ResponseType<T> = {\n    data: T\n    fieldsError: string[]\n    messages: string[]\n    resultCode: number\n}\n// export const setLoginAPI = {\n//     authLogin(email:string,password:string){\n//        const promise = instance.post<any>(`auth/login/`,{email},{password})\n//       return promise\n//     },\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {postsType} from \"./../components/Profile/MyPosts/MyPosts\";\nimport {\n    dialogsDataType,\n    dialogsMessagesDataType,\n} from \"./../components/Dialogs/Dialogs\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\n\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\n// const ADD_POST = \"ADD-POST\"\n// const UPDATE_NEW_MESSAGE_TEXT =\"UPDATE-NEW-MESSAGE-TEXT\"\n// const ADD_MESSAGE =\"ADD-MESSAGE\"\nexport type stateTypeFirst = {\n    _state: stateType\n    getState: () => stateType\n    rerenderEntireTree: (state: any) => void\n    subsCribe: (observer: any) => void\n    dispatch: (action: any) => void///КАКОЙ ТИп\n}\nexport type postsTypeState = {\n    posts: Array<postsType>\n\n    profile:any\n    status:string\n}\n\nexport type dialogsTypeState = {\n    dialogs: Array<dialogsDataType>\n    messages: Array<dialogsMessagesDataType>\n    newMessageText:string\n}\nexport type stateType = {\n    profilePage: postsTypeState\n    dialogsPage: dialogsTypeState\n    auth:any\n}\n\n// let store: stateTypeFirst = {\nlet store: any = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: \"Hi, how are you?\", countLikes: 10},\n                {id: 2, message: \"Hi, how are you?\", countLikes: 133},\n                {id: 3, message: \"Hi, how are you?\", countLikes: 4432},\n            ],\n            newPostText: 'it-kamasutra',\n            profile:null\n        },\n        dialogsPage: {\n            dialogs: [\n                {id: 1, name: \"Artemy\"},\n                {id: 2, name: \"Alevtina\"},\n                {id: 3, name: \"Akseniya\"},\n                {id: 4, name: \"Afonasii\"},\n                {id: 5, name: \"Belanton\"},\n                {id: 6, name: \"Stephan\"},\n                {id: 7, name: \"Stephan\"},\n                {id: 8, name: \"Stephan\"},\n                {id: 9, name: \"Stephan\"},\n            ],\n            messages: [\n                {id: 1, message: \"Halllooo?\"},\n                // { id: 2, message: \"Hey how are you?\" },\n                // { id: 3, message: \"Hey how are you?\" },\n\n            ],\n            newMessageText: \"\"\n        }\n    },\n    getState() {\n        return this._state;\n    },\n    subsCribe(observer: any) {\n        this.rerenderEntireTree = observer\n    },\n    rerenderEntireTree(state: any) {\n        console.log('state changed')\n    },\n    dispatch(action:any) {\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\n        this.rerenderEntireTree(this._state)\n    }\n}\n\n\nexport default store;\n","import React from \"react\";\nimport classes from \"./Navbar.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport store from \"./../../redux/state\";\n\n\n// // ПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙ\n// ПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙПОСТАВИЛ КЕЙЙЙ\nconst Navbar = () => {\n    const bestFriends = store._state.dialogsPage.dialogs.map((friend:any) => {\n        return <div key={friend.id}>{friend.name}</div> ;\n    })\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n          <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to =\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n      </div>\n        <div className={classes.item}>\n            <NavLink to =\"/users\" activeClassName={classes.active}>Users</NavLink>\n        </div>\n      <div className={classes.item}>\n          <NavLink to =\"/news\" activeClassName={classes.active}>News</NavLink>\n      </div>\n      <div className={classes.item}>\n          <NavLink to =\"/music\" activeClassName={classes.active}>Music</NavLink>\n      </div>\n      <div className={classes.item}>\n          <NavLink to =\"settings\" activeClassName={classes.active}>Settings</NavLink>\n      </div>\n        <div className={classes.item}>\n            <span className={classes.myBestFriends}>{bestFriends}</span>\n        </div>\n\n\n\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\n\n\nconst News= () => {\n         return(\n        <p>CHECK News</p>\n    )\n}\n\nexport default News","import React from \"react\";\n\n\n\nconst Music= () => {\n         return(\n        <p>CHECK Music</p>\n    )\n}\n\nexport default Music","import React from \"react\";\n\n\n\nconst Settings= () => {\n         return <p>Check settings</p>\n}\n\nexport default Settings\n\n","export let updateObjectInArray =(items:any,itemId:any, objPropsName:string,newObjProps:any )=>{\n    return items.map((u:any) => {\n        if (u[objPropsName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u\n    })\n}","import {userAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst UNFOLLOW = \"UNFOLLOW\"\nconst FOLLOW = \"FOLLOW_UP\"\nconst SET_USERS = \"SET_USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\nconst IS_FETCHING = \"IS_FETCHING\"\nconst IS_FOLLOWING_PROGRESS = \"IS_FOLLOWING_PROGRESS\"\n\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [2, 3]\n}\n\n\nfunction usersReducer(state: usersTypeAll = initialState, action: UserActionTypes): usersTypeAll {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users:updateObjectInArray(state.users,action.userId,'id',{followed:true})\n\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                /////// users:[...state.users],\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u\n                // })\n                users:updateObjectInArray(state.users,action.userId,'id',{followed:false})\n            }\n        case SET_USERS:\n            return {...state, users: action.users}//взять старый стей и пользовтелей которые там были и перезатеретт весь массив\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_COUNT: {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state\n    }\n\n\n}\n\nexport const follow = (userId: any): FollowActionCreatorType => ({type: FOLLOW, userId})\n\nexport const unFollow = (userId: any): UnFollowActionCreatorType => ({type: UNFOLLOW, userId})\nexport const setUsers = (users: any): setUsetACType => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number): setCurrentPageACType => ({\n    type: SET_CURRENT_PAGE, currentPage: currentPage\n})\nexport const setTotalUsersCount = (totalCount: number): setTotalCountACType => ({\n    type: SET_TOTAL_COUNT, totalCount: totalCount\n})\nexport const toggleIsFetching = (isFetching: boolean): isFetchingACType => ({\n    type: IS_FETCHING, isFetching: isFetching\n})\nexport const isFollowingInProgress = (isFetching: boolean, userId: number): isFollowingInProgressType => ({\n    type: IS_FOLLOWING_PROGRESS, isFetching: isFetching, userId: userId\n})\n\n///////***********образец САНКИ первый вариант*****************///////////////\n\n// export const getUsersThunk = (dispatch:any)=>{\n//    dispatch.toggleIsFetching(true)\n//     userAPI.getUsers(this.props.currentPage, this.props.pageSize).then((data:any) => {\n//         dispatch.toggleIsFetching(false)\n//         dispatch.setUsers(data.items)\n//         dispatch.setTotalUsersCount(data.totalCount)\n//     });\n// }\n\n///////***********  образец САНКИ второй вариант с создателем САНКИ который нам её возвращает  *****************///////////////\n// getUsersThunkСreator\nexport const getUsersTC = (page: any, pageSize: any) => {\n    return async (dispatch: any) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n        let data = await userAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalUsersCount(data.totalCount))\n\n    }\n}\n\nexport const unFollowThunkCreator = (userID: number) => {\n    return async (dispatch: any) => {\n        dispatch(isFollowingInProgress(true, userID))\n        let data = await userAPI.unFollowUsers(userID)\n        if (data.resultCode === 0) {\n            dispatch(unFollow(userID))\n        }\n        dispatch(isFollowingInProgress(false, userID))\n\n    }\n}\nexport const followThunkCreator = (userID: number) => {\n    return async (dispatch: any) => {\n        dispatch(isFollowingInProgress(true, userID))\n        let data = await userAPI.followUsers(userID)\n        if (data.resultCode === 0) {\n            dispatch(follow(userID))\n        }\n        dispatch(isFollowingInProgress(false, userID))\n\n    }\n}\n\n\ntype LocationType = {\n    city: string\n    country: string\n}\nexport type usersType = {\n    id: number\n    photoUrl: any\n    followed: boolean\n    name: string\n    status: string\n    location: LocationType\n}\nexport type usersTypeAll = {\n    users: Array<usersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\n\n\nexport type UserActionTypes =\n    FollowActionCreatorType\n    | UnFollowActionCreatorType\n    | setUsetACType\n    | setCurrentPageACType\n    | setTotalCountACType\n    | isFetchingACType\n    | isFollowingInProgressType\n\n\ntype isFollowingInProgressType = {\n    type: typeof IS_FOLLOWING_PROGRESS\n    isFetching: boolean\n    userId: number\n}\ntype isFetchingACType = {\n    type: typeof IS_FETCHING\n    isFetching: boolean\n}\n\ntype setTotalCountACType = {\n    type: typeof SET_TOTAL_COUNT\n    totalCount: number\n}\n\ntype setCurrentPageACType = {\n    type: typeof SET_CURRENT_PAGE\n    currentPage: any\n}\ntype FollowActionCreatorType = {\n    type: typeof FOLLOW\n    userId: any\n}\ntype UnFollowActionCreatorType = {\n    type: typeof UNFOLLOW\n    userId: any\n\n}\ntype setUsetACType = {\n    type: typeof SET_USERS\n    users: any\n\n}\n\n\nexport default usersReducer","import React, {useState} from \"react\";\nimport styles from \"./Paginator.module.css\"\n\n\ntype paginatorType = {\n    pageSize: number\n    currentPage: number\n    totalItemsCount: number\n    onPageChanged: (p: number) => void\n    portionSize?: number\n    // setCurrentPage:Function\n}\n\n\nexport const Paginator = ({pageSize, currentPage, totalItemsCount, onPageChanged, portionSize = 10}: paginatorType) => {\n\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n    //ниже получили сколбко всего будет страниц, так как задали размер одной страницы 10 users\n    let portionCount = Math.ceil(pageCount / portionSize)\n\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n    console.log(portionCount)\n    // console.log(portionNumber)\n    return (\n        <div>{portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span\n                        className={currentPage === p ? styles.selectPage : styles.pages }\n                        onClick={(e) => {\n                            onPageChanged(p)\n                        }}\n                        key={p}>\n                    {p}</span>\n                })\n            }\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\n\n        </div>\n    )\n}","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/iconmen.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\n\n\ntype usersType = {\n    users: any\n    followingInProgress: Array<number>\n    unFollowThunkCreator: (userID: number) => void\n    followThunkCreator: (userID: number) => void\n}\n\n\nexport const User = (props: usersType) => {\nlet u = props.users\n\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {u.followed ?\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.unFollowThunkCreator(u.id)\n                        }}>Unfollow</button>\n                        :\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.followThunkCreator(u.id)\n                        }}>Follow</button>\n                    }\n\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{u.name}</div>\n                    <div>{u.status}</div>\n                </span>\n                <span>\n                         <div>{'u.location.country'}</div>\n                    <div>{'u.location.city'}</div>\n\n                </span>\n            </span>\n\n        </div>\n    )\n\n\n}","import React from \"react\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\n\n\ntype usersType = {\n    pageSize: number\n    currentPage: number\n    users: any\n    totalUsersCount: number\n    onPageChanged: (p: number) => void\n    unFollow: (userId: any) => void\n    follow: (userId: any) => void\n    name: string\n    status: any\n    // setCurrentPage:Function\n    // isFollowingInProgress: any\n    followingInProgress: Array<number>\n    unFollowThunkCreator:(userID:number)=>void\n    followThunkCreator:(userID:number)=>void\n\n\n}\n\n\n\nfunction solve(s: any) {\n    let upper = s.split('').filter((x: any) => x === x.toUpperCase()).length\n    let lower = s.split('').filter((x: any) => x === x.toLowerCase()).length\n    console.log(upper)\n    console.log(lower)\n    return lower > upper || lower == upper ? s.toLowerCase() : s.toUpperCase()\n\n}\n\n\n\nexport const Users = (props: usersType) => {\n\n\n    return (\n        <div>\n            <Paginator pageSize={props.pageSize}\n                       currentPage={props.currentPage}\n                       onPageChanged={props.onPageChanged}\n                       totalItemsCount={props.totalUsersCount}\n                       // setCurrentPage={props.setCurrentPage}\n            />\n\n            {\n                props.users.map((u: any) => <User users={u}\n                                                  followingInProgress={props.followingInProgress}\n                                                  followThunkCreator={props.followThunkCreator}\n                                                  unFollowThunkCreator={props.unFollowThunkCreator}\n                                                  key={u.id}/>\n\n\n                )}\n        </div>)\n\n}","export const getUsersSelector = (state: any) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state: any) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: any) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: any) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: any) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: any) => {\n    return state.usersPage.followingInProgress\n}\n\nexport const getIsAuth = (state: any) => {\n    return state.auth.isAuth\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow, followThunkCreator, getUsersTC, setCurrentPage,\n    unFollow, unFollowThunkCreator\n} from \"../../redux/user-reducer\";\nimport {Users} from \"./UserFunc\";\nimport ToggleIsFetching from \"../common/ToggleIsFetching\";\n\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage, getFollowingInProgress, getIsAuth,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSelector\n} from \"../../redux/users-selectors\";\n\n\nexport class UsersContainer extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: any) => {\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <ToggleIsFetching/> : null}\n            <Users pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   name={this.props.name}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   onPageChanged={this.onPageChanged}\n                   status={this.props.status}\n                   totalUsersCount={this.props.totalUsersCount}\n                   unFollow={this.props.unFollow}\n                   followingInProgress={this.props.followingInProgress}\n                   followThunkCreator={this.props.followThunkCreator}\n                   unFollowThunkCreator={this.props.unFollowThunkCreator}\n                   // setCurrentPage={this.props.setCurrentPage}\n\n\n            />\n        </>\n\n    }\n}\n\nlet mapStateToProps = (state: any) => {//в нашем первом объекте мы берем данные из STATE, смысл этой функции замапить стейт на пропсы и превратить чать стейта в пропсы\n    return {\n        users: getUsersSelector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n        isAuth: getIsAuth(state)\n\n    }\n}\n\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {follow, unFollow, setCurrentPage, followThunkCreator, unFollowThunkCreator, getUsersTC}),\n    // withAuthRedirect\n\n)(UsersContainer)","import React from \"react\";\nimport classes from \"./Header.module.css\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faShip} from '@fortawesome/free-solid-svg-icons'\nimport {NavLink} from \"react-router-dom\";\n\n// let test1 = \"header\";\n// let test2 = \"active\";\n// let classNew = `${classes.header} ${classes.active}`;это двойной класс его можно использовать\n\nconst Header = (props: any) => {\n\n    return (\n        <header className={classes.header}>\n            <FontAwesomeIcon icon={faShip} className={classes.icon}/>\n            {/*<img src = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ2sOdNTUYrgWYsUwe8LF1FJ4-XXbBp9lLlfzKppSe2oOFumoLz&usqp=CAU\"></img>*/}\n            {/*<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbcaKdblglmQe9isNHnTB-6YwznE-rKTELEcyGQom6pck_eHpV&usqp=CAU\"></img>*/}\n            <div className={classes.loginBlock}>\n                {props.isAuth ? <div>{props.login} - <button onClick={props.loginOutTC}>LogOut</button> </div> : <NavLink to={\"/login\"}>Login</NavLink>}\n\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import {authAPI,securityAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = \"social-network/auth/SET_USER_DATA\"\nconst GET_CAPTCHAURL_SUCCESS = \"social-network/auth/GET_CAPTCHAURL_SUCCESS\"\n\n\nexport type authType = {\n    userId: any\n    email: any\n    login: any\n    isAuth: boolean\n    captchaUrl:any\n}\nexport type dataType = {\n    userId: string\n    email: string\n    login: string\n    isAuth: boolean\n    captcha?:any\n}\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl:null\n}\n\n\nfunction authReducer(state: authType = initialState, action: UserActionTypes): authType {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n\n            }\n        case GET_CAPTCHAURL_SUCCESS:\n            return {\n                // ...state,captchaUrl:action.payload\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setUserData = (userId: any, email: any, login: any, isAuth: any): setUserDataType => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n})\nexport const getCaptchaUrlAC = (captchaUrl:any): getCaptchaURLACType => ({\n    type: GET_CAPTCHAURL_SUCCESS,\n    payload: {captchaUrl}\n})\n\nexport const getAuthUserData = () => async (dispatch: Dispatch<any>) => {\n    let response = await authAPI.me();\n    if (response.resultCode === 0) {\n        let {id, email, login} = response.data\n        dispatch(setUserData(id, email, login, true))\n    }\n\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean,captcha:any) => async (dispatch: Dispatch<any>) => {\n    // dispatch(stopSubmit('login',{_error:'asdas'}));\n    let res = await authAPI.login(email, password, rememberMe,captcha)\n    if (res.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        if (res.data.resultCode === 10){\n            dispatch(getCaptchaUrlTC())\n        }\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : \"Some error\"\n        dispatch(stopSubmit('login', {_error: message}));\n\n    }\n\n\n}\nexport const loginOutTC = () => async (dispatch: Dispatch<any>) => {\n    let res = await authAPI.logOut()\n            if (res.data.resultCode === 0) {\n                dispatch(setUserData(null, null, null, false))\n            }\n}\n\nexport const getCaptchaUrlTC = () => async (dispatch: Dispatch<any>) => {\n    let res = await securityAPI.getCaptchaUrl()\n    const captchaURL =  res.data.url\n                dispatch(getCaptchaUrlAC(captchaURL))\n            }\n\n\ntype getAuthUserDataType = { getAuthUserData: () => void }\n\n\nexport type UserActionTypes = setUserDataType|getCaptchaURLACType\n\n\ntype getCaptchaURLACType = {\n    type: typeof GET_CAPTCHAURL_SUCCESS\n    payload: any\n    // userId:any,\n    // email:any,\n    // login:any,\n    // isAuth:any\n}\ntype setUserDataType = {\n    type: typeof SET_USER_DATA\n    payload: dataType\n    // userId:any,\n    // email:any,\n    // login:any,\n    // isAuth:any\n}\n\n\nexport default authReducer","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, loginOutTC} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\ntype PropsType = {\n    setUserData: (data: any) => void\n    getAuthUserData:any\n}\n\nclass HeaderContainer extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.getAuthUserData()\n        // userAPI.authUsers().then((data: any) => {\n        //     if (data.resultCode === 0) {\n        //         let {id, email, login} = data.data\n        //         this.props.setUserData({id, email, login})\n        //     }\n        // });\n    }\n\n    render() {\n\n        return (\n            <Header {...this.props}/>\n        );\n    }\n};\nconst mapStateToProps = (state: any) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {getAuthUserData,loginOutTC})(HeaderContainer);\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\nimport style from '../common/FormsControls/FormControls.module.css'\n\n\ntype FormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha?:any\n}\n\nconst LoginForm: React.FC<InjectedFormProps<any>> = (props:any) => {\n\nconsole.log(props.captchaUrl)\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} name={'password'} type={'password'} validate={[required]}\n                       component={Input}/>\n            </div>\n            <div>\n                <Field component={Input} name={'rememberMe'} type={'checkbox'}/> remember me\n            </div>\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\n            {props.captchaUrl && <div>\n                <Field placeholder={'symbols from image'} name={'captcha'} validate={[required]} component={Input}/> remember me\n            </div>}\n        \n\n\n            {props.error && <div className={style.formSummaryError}>\n                {props.error}\n            </div>}\n\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm:any = reduxForm<any>({form: 'login'})(LoginForm)\n\n\nexport const Login = (props: any) => {\n    const isAuth = useSelector<AppRootStateType, any>((state) => state.auth.isAuth)\n    const captchaUrl =useSelector<AppRootStateType,any>(state => state.auth.captchaUrl)\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData: FormDataType) => {\n\n        dispatch(loginTC(formData.email, formData.password, formData.rememberMe, formData.captcha))\n    }\n    if (isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n    return (<div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n        </div>\n\n    )\n}\n\n\n\n\n\n","import {Dispatch} from \"redux\";\nimport {getAuthUserData} from \"./auth-reducer\";\nconst INITIALIZED_SUCCESED = \"INITIALIZED_SUCCESED\"\n\n\nexport type initialStateType = {\n    initialized: boolean\n}\n\nlet initialState = {\n    initialized: false\n}\n\n\nfunction appReducer(state: initialStateType = initialState, action: setInitialisedType): initialStateType {\n    switch (action.type) {\n        case INITIALIZED_SUCCESED:\n            return {\n                ...state,\n                initialized: true,\n\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setInitialisedSuccess = (): setInitialisedType => ({type: INITIALIZED_SUCCESED})\n\nexport const initializeAppTC = () => (dispatch: Dispatch<any>) => {\n    let promise = dispatch(getAuthUserData())\n   Promise.all([promise])\n       .then(()=>{\n        dispatch(setInitialisedSuccess());\n    });\n}\n\ntype setInitialisedType = {\n    type: typeof INITIALIZED_SUCCESED\n}\n\n\nexport default appReducer","import React from \"react\";\n// import {UserActionTypes, usersTypeAll} from \"./user-reducer\";\n// import {profileAPI, setLoginAPI} from \"../api/api\";\n// import {setStatusUpdate} from \"./profile-reducer\";\n\nconst SET_LOGIN = \"SET_LOGIN\"\n\ntype initialStateType = {\n    login: string\n    password: any\n}\n\nlet initialState: initialStateType = {\n    login: \"\",\n    password: 1\n}\n\nexport function loginReducer(state: initialStateType = initialState, action: setLoginACType): initialStateType {\n    switch (action.type) {\n\n        case SET_LOGIN: {\n            return {\n                ...state, login: action.login,\n                password: action.password\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setLoginAC = (login: string, password: string): setLoginACType => ({\n    type: SET_LOGIN, login, password\n})\n\ntype setLoginACType = {\n    type: typeof SET_LOGIN\n    login: string\n    password: any\n}\n\n// export const setLoginToAuth=(login:string,password:string)=>(dispatch:any)=>{\n//     setLoginAPI.authLogin(login,password)\n//         .then((response:any)=>{\n//             // if (response.data.resultCode === 0){\n//                 dispatch(setLoginAC(response.login,response.password))\n//             // }\n//\n//         })\n// }\n","import {applyMiddleware, combineReducers, createStore,compose} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./user-reducer\";\nimport authReducer from \"./auth-reducer\";\n// import thunkMiddleware from \"react-redux-typescript\"\n// import thunkMiddleware from \"react-redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\nimport {loginReducer} from \"./login-reducer\";\nimport appReducer from \"./app-reducer\";\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage:usersReducer,\n    auth:authReducer,\n    form:formReducer,\n    loginPage:loginReducer,\n    app:appReducer\n})\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store= createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\n));\n\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware))\nexport type AppRootStateType = ReturnType<typeof reducers>\n// @ts-ignore\nwindow.store = store;\n\nexport default store","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\n\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport ToggleIsFetching from \"./components/common/ToggleIsFetching\";\nimport store from \"./redux/redux-store\";\nimport {withSuspence} from \"./hoc/withSuspence\";\n\n// Этот компонент загружается динамически\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\n\nclass App extends React.Component<any, any> {\n//необходимо задиспачить тут ошибку которую нужно создать в app reducer 47 минута\n    catchAllUnhandledErrors = (reason: any, promise: any) => {\n        alert('Some error');\n    }\n\n    componentDidMount() {\n        this.props.initializeAppTC()\n        // @ts-ignore\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    componentWillUnmount() {\n        // @ts-ignore\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <ToggleIsFetching/>\n        }\n        return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n\n                <div className=\"app-wrapper-content\">\n                    <Route\n                        exact\n                        path=\"/dialogs\"\n                        //вариант загрузки DialogsComponent с HOC withSuspence\n                        render={withSuspence(DialogsContainer)}\n                    />\n\n                    <Route\n                        path='/profile/:userId?'\n                        render={() =>\n                            //вариант загрузки DialogsComponent без HOC withSuspence\n                            <React.Suspense fallback={<ToggleIsFetching/>}>\n                                <div>\n                                    <ProfileContainer/>\n                                </div>\n                            </React.Suspense>\n                        }\n                    />\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n\n                    <Route path=\"/news\" component={News}/>\n                    <Route path=\"/music\" component={Music}/>\n                    <Route path=\"/settings\" component={Settings}/>\n\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    initialized: state.app.initialized\n})\n\nexport let AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeAppTC}))(App);\n\nexport const SocialTSApp = (props: any) => {\n    return (<HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>)\n}\n\n","import React from \"react\";\nimport ToggleIsFetching from \"../components/common/ToggleIsFetching\";\n\n\nexport const withSuspence = (Component: any) => {\n\n    return (props: any) => {\n\n    return <React.Suspense fallback={<ToggleIsFetching/>}>\n        <div>\n            <Component {...props}/>\n        </div>\n    </React.Suspense>\n}\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {SocialTSApp} from \"./App\";\n\n// import store from \"./redux/redux-store\"\n// import {BrowserRouter} from \"react-router-dom\";\n// import {Provider} from \"react-redux\";\n\n\n\nReactDOM.render(\n  <SocialTSApp/>, document.getElementById(\"root\"));\n\n\n\n","import React from \"react\";\nimport preLoader from \"../assets/images/loader.svg\";\n\nfunction ToggleIsFetching() {\nreturn (<div>\n    <img src={preLoader}/>\n</div>)\n}\n\n\nexport default ToggleIsFetching","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2SPvv\",\"error\":\"FormControls_error__3zfBa\",\"formSummaryError\":\"FormControls_formSummaryError__2ffxR\"};","import React from \"react\";\nimport styles from './FormControls.module.css'\n\nexport const Textarea = ({input,meta,...props}:any)=>{\n    const hasError =meta.touched && meta.error\n    return(\n        <div className={styles.formControl + \" \" +(hasError ?styles.error:\" \") }>\n            <div>\n                <textarea{...input} {...props}/>\n            </div>\n            { hasError &&   <span>{meta.error}</span>}\n\n\n        </div>\n    )\n}\n\nexport const Input = ({input,meta:{touched,error},...props}:any)=>{\n    const hasError =touched && error\n    return(\n        <div className={styles.formControl + \" \" +(hasError ?styles.error:\" \") }>\n            <div>\n                <input{...input} {...props} />\n            </div>\n            { hasError &&   <span>{error}</span>}\n\n\n        </div>\n    )\n}","import {postsType} from \"../components/Profile/MyPosts/MyPosts\"\nimport {postsTypeState} from \"./state\";\nimport {profileAPI, userAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {stopSubmit} from \"redux-form\";\nimport {rejects} from \"assert\";\n\nconst ADD_POST = \"ADD-POST\"\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\nconst SET_STATUS_PROFILE = \"SET_STATUS_PROFILE\"\nconst SET_STATUS_UPDATE = \"SET_STATUS_UPDATE\"\nconst DELETE_POST = \"DELETE_POST\"\nconst SET_SAVE_PHOTO = \"SET_SAVE_PHOTO\"\n\n\nlet initialState: postsTypeState = {\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", countLikes: 10},\n        {id: 2, message: \"Hi, how are you?\", countLikes: 133},\n        {id: 3, message: \"Hi, how are you?\", countLikes: 4432},\n    ],\n    profile: null,\n    status: \"\"\n}\n\n\nfunction profileReducer(state: postsTypeState = initialState, action: ProfileActionTypes): postsTypeState {\n    switch (action.type) {\n        case ADD_POST: {\n\n            let newPost: postsType = {\n                id: 5,\n                message: action.newPostText,\n                countLikes: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS_PROFILE: {\n            return {...state, status: action.status}\n        }\n        case SET_STATUS_UPDATE: {\n            return {...state, status: action.status}\n        }\n        case DELETE_POST: {\n\n\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        }\n        case SET_SAVE_PHOTO:\n            return {...state, profile: {...state.profile, photos: action.photo}}\n\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({type: ADD_POST, newPostText})\n\n\nexport const setUserProfile = (profile: any): setUserProfileType => ({\n    type: SET_USER_PROFILE, profile: profile\n\n})\n\nexport const setStatusProfile = (status: string): setStatusProfileType => ({\n    type: SET_STATUS_PROFILE, status\n})\nexport const setStatusUpdate = (status: string): setStatusUpdateType => ({\n    type: SET_STATUS_UPDATE, status\n})\nexport const deletePostAC = (postId: number): deletePostType => ({\n    type: DELETE_POST, postId\n})\nexport const setSavePhotoAC = (photo: number): setSavePhotoType => ({\n    type: SET_SAVE_PHOTO, photo\n})\n\nexport const getUserProfile = (userId: any) => async (dispatch: Dispatch) => {\n    let response = await userAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n\n}\n\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatusProfile(response.data))\n\n}\nexport const getUpdateUserStatus = (status: string) => async (dispatch: any) => {\n    try {\n        let response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatusUpdate(status))\n        }\n    }\n    catch (error){\n        alert(error)\n    }\n\n}\nexport const getSavePhotoTC = (file: any) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(setSavePhotoAC(response.data.data.photos))\n    }\n}\nexport const getSaveInfoTC = (profile: any) => async (dispatch: any, getState:any) => {\n    const userIds:any = getState().auth.userId\n    const response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userIds))\n    } else{\n        dispatch(stopSubmit('profileDataForm', {_error: response.data.messages[0]}));//ёто нужно будет потом распарсить\n        return Promise.reject(response.data.messages[0])\n    }\n}\n\nexport type ProfileActionTypes =\n    AddPostActionCreatorType\n    | setUserProfileType\n    | setStatusProfileType\n    | setStatusUpdateType\n    | deletePostType\n    | setSavePhotoType\n\n\ntype setSavePhotoType = {\n    type: typeof SET_SAVE_PHOTO\n    photo: any\n}\ntype setStatusUpdateType = {\n    type: typeof SET_STATUS_UPDATE\n    status: string\n}\ntype deletePostType = {\n    type: typeof DELETE_POST\n    postId: number\n}\ntype setStatusProfileType = {\n    type: typeof SET_STATUS_PROFILE\n    status: string\n}\ntype setUserProfileType = {\n    type: typeof SET_USER_PROFILE\n    profile: any\n}\ntype AddPostActionCreatorType = {\n    type: typeof ADD_POST\n    newPostText: string\n}\n\n\nexport default profileReducer","export const required = (value:any) =>{\nif (value)return undefined;\nreturn 'Field required'\n}\n\n\n\nexport const  maxLengthCreator = (maxLength:any)=>(value:string)=>{\n    if (value.length > maxLength)return `Max lenght is ${maxLength} symbols`\n    return undefined\n}\n\n","import {stateType, dialogsTypeState} from \"./state\"\n\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\"\nconst ADD_MESSAGE = \"ADD-MESSAGE\"\n\nlet initialState = {\n\n    dialogs: [\n        {id: 1, name: \"Artemy\"},\n        {id: 2, name: \"Alevtina\"},\n        {id: 3, name: \"Akseniya\"},\n        {id: 4, name: \"Afonasii\"},\n        {id: 5, name: \"Belanton\"},\n        {id: 6, name: \"Stephan\"},\n        {id: 7, name: \"Stephan\"},\n        {id: 8, name: \"Stephan\"},\n        {id: 9, name: \"Stephan\"},\n    ],\n    messages: [\n        {id: 1, message: \"Halllooo?\"},\n        // { id: 2, message: \"Hey how are you?\" },\n        // { id: 3, message: \"Hey how are you?\" },\n\n    ],\n    newMessageText: \"\"\n\n}\n\n\nfunction dialogsReducer(state: dialogsTypeState = initialState, action: DialogsActionType): dialogsTypeState {\n    let stateCopy;\n\n\n\n    switch (action.type) {\n        // case UPDATE_NEW_MESSAGE_TEXT: {\n        //     stateCopy = {\n        //         ...state,\n        //         newMessageText: action.newMessageText1\n        //     };\n        //     return stateCopy\n        // }\n        case ADD_MESSAGE: {\n\n            let newMessage = action.newMessageText\n            let stateCopy = {\n                ...state,\n                newMessageText: \"\",\n                messages: [...state.messages, {id: 77, message: newMessage}]\n\n            };\n            // let newMessage = {\n            //     id: 77,\n            //     message: state.newMessageText\n            // }\n            return stateCopy\n        }\n        default:\n            return state\n    }\n\n}\n\nexport type DialogsActionType = AddMessageCreatorType\n    // UpdateNEwMessageTextCreator\n\ntype AddMessageCreatorType = {\n    type: typeof ADD_MESSAGE\n    newMessageText:string\n}\n// type UpdateNEwMessageTextCreator = {\n//     type: typeof UPDATE_NEW_MESSAGE_TEXT;\n//     newMessageText1: string\n// }\n\nexport const addMessageCreator = (newMessageText:string): AddMessageCreatorType => ({type: ADD_MESSAGE,newMessageText})\n\n// export const updateNEwMessageTextCreator = (text: string): UpdateNEwMessageTextCreator => ({\n//     type: UPDATE_NEW_MESSAGE_TEXT, newMessageText1: text,\n// })\n\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"icon\":\"Header_icon__2vvCF\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__1oWzK\",\"pages\":\"Paginator_pages__1p_3u\"};"],"sourceRoot":""}