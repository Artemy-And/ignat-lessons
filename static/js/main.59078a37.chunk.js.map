{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/images/iconmen.png","components/assets/images/loader.svg","api/api.tsx","redux/state.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","redux/user-reducer.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UserFunc.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/login/Login.tsx","redux/app-reducer.tsx","redux/login-reducer.tsx","redux/redux-store.tsx","App.tsx","hoc/withSuspence.tsx","index.tsx","components/common/ToggleIsFetching.tsx","components/common/FormsControls/FormControls.module.css","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx","components/common/FormsControls/FormsControls.tsx","components/Header/Header.module.css","utils/validators/validators.ts","components/common/Paginator/Paginator.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollowUsers","userId","delete","followUsers","post","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","authUsers","login","email","password","rememberMe","logOut","store","_state","profilePage","posts","id","message","countLikes","newPostText","profile","dialogsPage","dialogs","name","messages","newMessageText","getState","this","subsCribe","observer","rerenderEntireTree","state","console","log","dispatch","action","profileReducer","dialogsReducer","Navbar","bestFriends","map","friend","className","classes","nav","item","to","activeClassName","active","myBestFriends","News","Music","Settings","updateObjectInArray","items","itemId","objPropsName","newObjProps","u","initialState","users","totalUsersCount","isFetching","followingInProgress","follow","type","unFollow","setCurrentPage","toggleIsFetching","isFollowingInProgress","usersReducer","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","styles","selectPage","e","key","User","props","src","photos","small","userPhoto","disabled","some","unFollowThunkCreator","followThunkCreator","Users","getUsersSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","auth","isAuth","UsersContainer","pageNumber","getUsersTC","ToggleIsFetching","React","Component","compose","connect","userID","a","resultCode","page","Header","header","icon","faShip","loginBlock","loginOutTC","SET_USER_DATA","setUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","style","formSummaryError","Login","useSelector","useDispatch","formData","res","length","stopSubmit","_error","initialized","appReducer","reducers","combineReducers","formReducer","loginPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeAppTC","exact","path","render","Suspense","fallback","AppContainer","withRouter","promise","Promise","all","SocialTSApp","basename","process","ReactDOM","document","getElementById","preLoader","addPostActionCreator","setStatusUpdate","getUserProfile","getUserStatus","getUpdateUserStatus","newPost","postId","addMessageCreator","newMessage","stateCopy","Textarea","input","meta","hasError","touched","formControl","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.59078a37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"myBestFriends\":\"Navbar_myBestFriends__rk03E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectPage\":\"users_selectPage__3t1bg\"};","module.exports = __webpack_public_path__ + \"static/media/iconmen.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.79c69891.svg\";","import React from \"react\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        \"API-KEY\": \"53444f05-2fd9-4762-9034-1b37fffb3067\"\n    }\n})\n\n\nexport const userAPI = {\n    getUsers(currentPage:number, pageSize:number) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then((response: any) => {\n                return response.data\n            });\n    },\n\n\n    unFollowUsers(userId: number) {\n        return instance.delete(`follow/${userId}`)//когда хотим отписаться нужен delete\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    followUsers(userId: number) {\n        return instance.post(`follow/${userId}`)//когда хотим отписаться нужен delete\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    getProfile(userId: number) {\n        return instance.get(`profile/${userId}/`)\n    }\n\n}\n\nexport const profileAPI = {\n\n    getProfile(userId: number) {\n        return instance.get(`profile/${userId}/`)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}/`)\n    },\n    updateStatus(status:any){\n        return instance.put('profile/status/',{status:status})\n    }\n\n}\n\nexport const authAPI = {\n     me(){\n    return instance.get('auth/me')\n    },\n    authUsers() {\n        return instance.get(\"auth/me\")\n            .then((response: any) => {\n                return response.data\n            });\n    },\n    login(email:string,password:string,rememberMe:boolean = false){\n    return instance.post(`auth/login`,{email,password,rememberMe});\n    },\n    logOut(){\n    return instance.delete(`auth/login`);\n    }\n\n}\n\n// export const setLoginAPI = {\n//     authLogin(email:string,password:string){\n//        const promise = instance.post<any>(`auth/login/`,{email},{password})\n//       return promise\n//     },\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {postsType} from \"./../components/Profile/MyPosts/MyPosts\";\nimport {\n    dialogsDataType,\n    dialogsMessagesDataType,\n} from \"./../components/Dialogs/Dialogs\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\n\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\"\n// const ADD_POST = \"ADD-POST\"\n// const UPDATE_NEW_MESSAGE_TEXT =\"UPDATE-NEW-MESSAGE-TEXT\"\n// const ADD_MESSAGE =\"ADD-MESSAGE\"\nexport type stateTypeFirst = {\n    _state: stateType\n    getState: () => stateType\n    rerenderEntireTree: (state: any) => void\n    subsCribe: (observer: any) => void\n    dispatch: (action: any) => void///КАКОЙ ТИп\n}\nexport type postsTypeState = {\n    posts: Array<postsType>\n\n    profile:any\n    status:string\n}\n\nexport type dialogsTypeState = {\n    dialogs: Array<dialogsDataType>\n    messages: Array<dialogsMessagesDataType>\n    newMessageText:string\n}\nexport type stateType = {\n    profilePage: postsTypeState\n    dialogsPage: dialogsTypeState\n    auth:any\n}\n\n// let store: stateTypeFirst = {\nlet store: any = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: \"Hi, how are you?\", countLikes: 10},\n                {id: 2, message: \"Hi, how are you?\", countLikes: 133},\n                {id: 3, message: \"Hi, how are you?\", countLikes: 4432},\n            ],\n            newPostText: 'it-kamasutra',\n            profile:null\n        },\n        dialogsPage: {\n            dialogs: [\n                {id: 1, name: \"Artemy\"},\n                {id: 2, name: \"Alevtina\"},\n                {id: 3, name: \"Akseniya\"},\n                {id: 4, name: \"Afonasii\"},\n                {id: 5, name: \"Belanton\"},\n                {id: 6, name: \"Stephan\"},\n                {id: 7, name: \"Stephan\"},\n                {id: 8, name: \"Stephan\"},\n                {id: 9, name: \"Stephan\"},\n            ],\n            messages: [\n                {id: 1, message: \"Halllooo?\"},\n                // { id: 2, message: \"Hey how are you?\" },\n                // { id: 3, message: \"Hey how are you?\" },\n\n            ],\n            newMessageText: \"\"\n        }\n    },\n    getState() {\n        return this._state;\n    },\n    subsCribe(observer: any) {\n        this.rerenderEntireTree = observer\n    },\n    rerenderEntireTree(state: any) {\n        console.log('state changed')\n    },\n    dispatch(action:any) {\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\n        this.rerenderEntireTree(this._state)\n    }\n}\n\n\nexport default store;\n","import React from \"react\";\nimport classes from \"./Navbar.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport store from \"./../../redux/state\";\n\n\n\nconst Navbar = () => {\n    const bestFriends = store._state.dialogsPage.dialogs.map((friend:any) => {\n        return <div>{friend.name}</div> ;\n    })\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n          <NavLink to=\"/profile/\" activeClassName={classes.active}>Profile</NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to =\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n      </div>\n        <div className={classes.item}>\n            <NavLink to =\"/users/\" activeClassName={classes.active}>Users</NavLink>\n        </div>\n      <div className={classes.item}>\n          <NavLink to =\"/news\" activeClassName={classes.active}>News</NavLink>\n      </div>\n      <div className={classes.item}>\n          <NavLink to =\"/music\" activeClassName={classes.active}>Music</NavLink>\n      </div>\n      <div className={classes.item}>\n          <NavLink to =\"settings\" activeClassName={classes.active}>Settings</NavLink>\n      </div>\n        <div className={classes.item}>\n            <span className={classes.myBestFriends}>{bestFriends}</span>\n        </div>\n\n\n\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\n\n\nconst News= () => {\n         return(\n        <p>CHECK News</p>\n    )\n}\n\nexport default News","import React from \"react\";\n\n\n\nconst Music= () => {\n         return(\n        <p>CHECK Music</p>\n    )\n}\n\nexport default Music","import React from \"react\";\n\n\n\nconst Settings= () => {\n         return <p>Check settings</p>\n}\n\nexport default Settings\n\n","export let updateObjectInArray =(items:any,itemId:any, objPropsName:string,newObjProps:any )=>{\n    return items.map((u:any) => {\n        if (u[objPropsName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u\n    })\n}","import {userAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst UNFOLLOW = \"UNFOLLOW\"\nconst FOLLOW = \"FOLLOW_UP\"\nconst SET_USERS = \"SET_USERS\"\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\nconst IS_FETCHING = \"IS_FETCHING\"\nconst IS_FOLLOWING_PROGRESS = \"IS_FOLLOWING_PROGRESS\"\n\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [2, 3]\n}\n\n\nfunction usersReducer(state: usersTypeAll = initialState, action: UserActionTypes): usersTypeAll {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users:updateObjectInArray(state.users,action.userId,'id',{followed:true})\n\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                /////// users:[...state.users],\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u\n                // })\n                users:updateObjectInArray(state.users,action.userId,'id',{followed:false})\n            }\n        case SET_USERS:\n            return {...state, users: action.users}//взять старый стей и пользовтелей которые там были и перезатеретт весь массив\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_COUNT: {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state\n    }\n\n\n}\n\nexport const follow = (userId: any): FollowActionCreatorType => ({type: FOLLOW, userId})\n\nexport const unFollow = (userId: any): UnFollowActionCreatorType => ({type: UNFOLLOW, userId})\nexport const setUsers = (users: any): setUsetACType => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage: number): setCurrentPageACType => ({\n    type: SET_CURRENT_PAGE, currentPage: currentPage\n})\nexport const setTotalUsersCount = (totalCount: number): setTotalCountACType => ({\n    type: SET_TOTAL_COUNT, totalCount: totalCount\n})\nexport const toggleIsFetching = (isFetching: boolean): isFetchingACType => ({\n    type: IS_FETCHING, isFetching: isFetching\n})\nexport const isFollowingInProgress = (isFetching: boolean, userId: number): isFollowingInProgressType => ({\n    type: IS_FOLLOWING_PROGRESS, isFetching: isFetching, userId: userId\n})\n\n///////***********образец САНКИ первый вариант*****************///////////////\n\n// export const getUsersThunk = (dispatch:any)=>{\n//    dispatch.toggleIsFetching(true)\n//     userAPI.getUsers(this.props.currentPage, this.props.pageSize).then((data:any) => {\n//         dispatch.toggleIsFetching(false)\n//         dispatch.setUsers(data.items)\n//         dispatch.setTotalUsersCount(data.totalCount)\n//     });\n// }\n\n///////***********  образец САНКИ второй вариант с создателем САНКИ который нам её возвращает  *****************///////////////\n// getUsersThunkСreator\nexport const getUsersTC = (page: any, pageSize: any) => {\n    return async (dispatch: any) => {\n        dispatch(toggleIsFetching(true))\n        dispatch(setCurrentPage(page))\n        let data = await userAPI.getUsers(page, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalUsersCount(data.totalCount))\n\n    }\n}\n\nexport const unFollowThunkCreator = (userID: number) => {\n    return async (dispatch: any) => {\n        dispatch(isFollowingInProgress(true, userID))\n        let data = await userAPI.unFollowUsers(userID)\n        if (data.resultCode === 0) {\n            dispatch(unFollow(userID))\n        }\n        dispatch(isFollowingInProgress(false, userID))\n\n    }\n}\nexport const followThunkCreator = (userID: number) => {\n    return async (dispatch: any) => {\n        dispatch(isFollowingInProgress(true, userID))\n        let data = await userAPI.followUsers(userID)\n        if (data.resultCode === 0) {\n            dispatch(follow(userID))\n        }\n        dispatch(isFollowingInProgress(false, userID))\n\n    }\n}\n\n\ntype LocationType = {\n    city: string\n    country: string\n}\nexport type usersType = {\n    id: number\n    photoUrl: any\n    followed: boolean\n    name: string\n    status: string\n    location: LocationType\n}\nexport type usersTypeAll = {\n    users: Array<usersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\n\n\nexport type UserActionTypes =\n    FollowActionCreatorType\n    | UnFollowActionCreatorType\n    | setUsetACType\n    | setCurrentPageACType\n    | setTotalCountACType\n    | isFetchingACType\n    | isFollowingInProgressType\n\n\ntype isFollowingInProgressType = {\n    type: typeof IS_FOLLOWING_PROGRESS\n    isFetching: boolean\n    userId: number\n}\ntype isFetchingACType = {\n    type: typeof IS_FETCHING\n    isFetching: boolean\n}\n\ntype setTotalCountACType = {\n    type: typeof SET_TOTAL_COUNT\n    totalCount: number\n}\n\ntype setCurrentPageACType = {\n    type: typeof SET_CURRENT_PAGE\n    currentPage: any\n}\ntype FollowActionCreatorType = {\n    type: typeof FOLLOW\n    userId: any\n}\ntype UnFollowActionCreatorType = {\n    type: typeof UNFOLLOW\n    userId: any\n\n}\ntype setUsetACType = {\n    type: typeof SET_USERS\n    users: any\n\n}\n\n\nexport default usersReducer","import React, {useState} from \"react\";\nimport styles from \"./Paginator.module.css\"\n\n\ntype paginatorType = {\n    pageSize: number\n    currentPage: number\n    totalItemsCount: number\n    onPageChanged: (p: number) => void\n    portionSize?: number\n    // setCurrentPage:Function\n}\n\n\nexport const Paginator = ({pageSize, currentPage, totalItemsCount, onPageChanged, portionSize = 10}: paginatorType) => {\n\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n    //ниже получили сколбко всего будет страниц, так как задали размер одной страницы 10 users\n    let portionCount = Math.ceil(pageCount / portionSize)\n\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n    console.log(portionCount)\n    // console.log(portionNumber)\n    return (\n        <div>{portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span\n                        className={currentPage === p ? styles.selectPage : styles.pages }\n                        onClick={(e) => {\n                            onPageChanged(p)\n                        }}\n                        key={p}>\n                    {p}</span>\n                })\n            }\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\n\n        </div>\n    )\n}","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/iconmen.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\n\n\ntype usersType = {\n\n    users: any\n    // totalUsersCount: number\n    // onPageChanged: (p: number) => void\n    // unFollow: (userId: any) => void\n    // follow: (userId: any) => void\n    // name: string\n    // status: any\n    // // isFollowingInProgress: any\n    followingInProgress: Array<number>\n    unFollowThunkCreator: (userID: number) => void\n    followThunkCreator: (userID: number) => void\n\n\n}\n\n\nexport const User = (props: usersType) => {\nlet u = props.users\n\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + u.id}>\n                    <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {u.followed ?\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.unFollowThunkCreator(u.id)\n                        }}>Unfollow</button>\n                        :\n                        <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                            props.followThunkCreator(u.id)\n                        }}>Follow</button>\n                    }\n\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{u.name}</div>\n                    <div>{u.status}</div>\n                </span>\n                <span>\n                         <div>{'u.location.country'}</div>\n                    <div>{'u.location.city'}</div>\n\n                </span>\n            </span>\n\n        </div>\n    )\n\n\n}","import React from \"react\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\n\n\ntype usersType = {\n    pageSize: number\n    currentPage: number\n    users: any\n    totalUsersCount: number\n    onPageChanged: (p: number) => void\n    unFollow: (userId: any) => void\n    follow: (userId: any) => void\n    name: string\n    status: any\n    // setCurrentPage:Function\n    // isFollowingInProgress: any\n    followingInProgress: Array<number>\n    unFollowThunkCreator:(userID:number)=>void\n    followThunkCreator:(userID:number)=>void\n\n\n}\n\n\n\nfunction solve(s: any) {\n    let upper = s.split('').filter((x: any) => x === x.toUpperCase()).length\n    let lower = s.split('').filter((x: any) => x === x.toLowerCase()).length\n    console.log(upper)\n    console.log(lower)\n    return lower > upper || lower == upper ? s.toLowerCase() : s.toUpperCase()\n\n}\n\n\n\nexport const Users = (props: usersType) => {\n\n\n    return (\n        <div>\n            <Paginator pageSize={props.pageSize}\n                       currentPage={props.currentPage}\n                       onPageChanged={props.onPageChanged}\n                       totalItemsCount={props.totalUsersCount}\n                       // setCurrentPage={props.setCurrentPage}\n            />\n\n            {\n                props.users.map((u: any) => <User users={u}\n                                                  followingInProgress={props.followingInProgress}\n                                                  followThunkCreator={props.followThunkCreator}\n                                                  unFollowThunkCreator={props.unFollowThunkCreator}\n                                                  key={u.id}/>\n\n\n                )}\n        </div>)\n\n}","export const getUsersSelector = (state: any) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state: any) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: any) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: any) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: any) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: any) => {\n    return state.usersPage.followingInProgress\n}\n\nexport const getIsAuth = (state: any) => {\n    return state.auth.isAuth\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow, followThunkCreator, getUsersTC, setCurrentPage,\n    unFollow, unFollowThunkCreator\n} from \"../../redux/user-reducer\";\nimport {Users} from \"./UserFunc\";\nimport ToggleIsFetching from \"../common/ToggleIsFetching\";\n\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage, getFollowingInProgress, getIsAuth,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSelector\n} from \"../../redux/users-selectors\";\n\n\nexport class UsersContainer extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: any) => {\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <ToggleIsFetching/> : null}\n            <Users pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   name={this.props.name}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   onPageChanged={this.onPageChanged}\n                   status={this.props.status}\n                   totalUsersCount={this.props.totalUsersCount}\n                   unFollow={this.props.unFollow}\n                   followingInProgress={this.props.followingInProgress}\n                   followThunkCreator={this.props.followThunkCreator}\n                   unFollowThunkCreator={this.props.unFollowThunkCreator}\n                   // setCurrentPage={this.props.setCurrentPage}\n\n\n            />\n        </>\n\n    }\n}\n\nlet mapStateToProps = (state: any) => {//в нашем первом объекте мы берем данные из STATE, смысл этой функции замапить стейт на пропсы и превратить чать стейта в пропсы\n    return {\n        users: getUsersSelector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n        isAuth: getIsAuth(state)\n\n    }\n}\n\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {follow, unFollow, setCurrentPage, followThunkCreator, unFollowThunkCreator, getUsersTC}),\n    // withAuthRedirect\n\n)(UsersContainer)","import React from \"react\";\nimport classes from \"./Header.module.css\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faShip} from '@fortawesome/free-solid-svg-icons'\nimport {NavLink} from \"react-router-dom\";\n\n// let test1 = \"header\";\n// let test2 = \"active\";\n// let classNew = `${classes.header} ${classes.active}`;это двойной класс его можно использовать\n\nconst Header = (props: any) => {\n\n    return (\n        <header className={classes.header}>\n            <FontAwesomeIcon icon={faShip} className={classes.icon}/>\n            {/*<img src = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ2sOdNTUYrgWYsUwe8LF1FJ4-XXbBp9lLlfzKppSe2oOFumoLz&usqp=CAU\"></img>*/}\n            {/*<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbcaKdblglmQe9isNHnTB-6YwznE-rKTELEcyGQom6pck_eHpV&usqp=CAU\"></img>*/}\n            <div className={classes.loginBlock}>\n                {props.isAuth ? <div>{props.login} - <button onClick={props.loginOutTC}>LogOut</button> </div> : <NavLink to={\"/login\"}>Login</NavLink>}\n\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import {authAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = \"social-network/auth/SET_USER_DATA\"\n\n\nexport type authType = {\n    userId: any\n    email: any\n    login: any\n    isAuth: boolean\n}\nexport type dataType = {\n    userId: string\n    email: string\n    login: string\n    isAuth: boolean\n}\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\n\nfunction authReducer(state: authType = initialState, action: UserActionTypes): authType {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setUserData = (userId: any, email: any, login: any, isAuth: any): setUserDataType => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n})\n\nexport const getAuthUserData = () => async (dispatch: Dispatch<any>) => {\n    let data = await authAPI.me();\n    if (data.data.resultCode === 0) {\n        let {id, email, login} = data.data\n        dispatch(setUserData(id, email, login, true))\n    }\n\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch<any>) => {\n    // dispatch(stopSubmit('login',{_error:'asdas'}));\n    let res = await authAPI.login(email, password, rememberMe)\n    if (res.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : \"Some error\"\n        dispatch(stopSubmit('login', {_error: message}));\n\n    }\n\n\n}\nexport const loginOutTC = () => async (dispatch: Dispatch<any>) => {\n    let res = await authAPI.logOut()\n            if (res.data.resultCode === 0) {\n                dispatch(setUserData(null, null, null, false))\n            }\n}\n\ntype getAuthUserDataType = { getAuthUserData: () => void }\n\n\nexport type UserActionTypes = setUserDataType\n\n\ntype setUserDataType = {\n    type: typeof SET_USER_DATA\n    payload: dataType\n    // userId:any,\n    // email:any,\n    // login:any,\n    // isAuth:any\n}\n\n\nexport default authReducer","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, loginOutTC} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\ntype PropsType = {\n    setUserData: (data: any) => void\n    getAuthUserData:any\n}\n\nclass HeaderContainer extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.getAuthUserData()\n        // userAPI.authUsers().then((data: any) => {\n        //     if (data.resultCode === 0) {\n        //         let {id, email, login} = data.data\n        //         this.props.setUserData({id, email, login})\n        //     }\n        // });\n    }\n\n    render() {\n\n        return (\n            <Header {...this.props}/>\n        );\n    }\n};\nconst mapStateToProps = (state: any) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\n\nexport default connect(mapStateToProps, {getAuthUserData,loginOutTC})(HeaderContainer);\n","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\nimport style from '../common/FormsControls/FormControls.module.css'\n\n\n\ntype FormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit,error}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} name={'password'} type={'password'} validate={[required]}\n                       component={Input}/>\n            </div>\n            <div>\n                <Field component={Input} name={'rememberMe'} type={'checkbox'}/> remember me\n            </div>\n            {error &&  <div className={style.formSummaryError}>\n                {error}\n            </div>}\n\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\n\n\nexport const Login = (props: any) => {\n    const isAuth = useSelector<AppRootStateType, any>((state) => state.auth.isAuth)\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData: FormDataType) => {\n\n        dispatch(loginTC(formData.email, formData.password, formData.rememberMe))\n    }\n    if (isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return (<div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n\n    )\n}\n\n\n\n\n\n","import {Dispatch} from \"redux\";\nimport {getAuthUserData} from \"./auth-reducer\";\nconst INITIALIZED_SUCCESED = \"INITIALIZED_SUCCESED\"\n\n\nexport type initialStateType = {\n    initialized: boolean\n}\n\nlet initialState = {\n    initialized: false\n}\n\n\nfunction appReducer(state: initialStateType = initialState, action: setInitialisedType): initialStateType {\n    switch (action.type) {\n        case INITIALIZED_SUCCESED:\n            return {\n                ...state,\n                initialized: true,\n\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setInitialisedSuccess = (): setInitialisedType => ({type: INITIALIZED_SUCCESED})\n\nexport const initializeAppTC = () => (dispatch: Dispatch<any>) => {\n    let promise = dispatch(getAuthUserData())\n   Promise.all([promise])\n       .then(()=>{\n        dispatch(setInitialisedSuccess());\n    });\n}\n\ntype setInitialisedType = {\n    type: typeof INITIALIZED_SUCCESED\n}\n\n\nexport default appReducer","import React from \"react\";\n// import {UserActionTypes, usersTypeAll} from \"./user-reducer\";\n// import {profileAPI, setLoginAPI} from \"../api/api\";\n// import {setStatusUpdate} from \"./profile-reducer\";\n\nconst SET_LOGIN = \"SET_LOGIN\"\n\ntype initialStateType = {\n    login: string\n    password: any\n}\n\nlet initialState: initialStateType = {\n    login: \"\",\n    password: 1\n}\n\nexport function loginReducer(state: initialStateType = initialState, action: setLoginACType): initialStateType {\n    switch (action.type) {\n\n        case SET_LOGIN: {\n            return {\n                ...state, login: action.login,\n                password: action.password\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const setLoginAC = (login: string, password: string): setLoginACType => ({\n    type: SET_LOGIN, login, password\n})\n\ntype setLoginACType = {\n    type: typeof SET_LOGIN\n    login: string\n    password: any\n}\n\n// export const setLoginToAuth=(login:string,password:string)=>(dispatch:any)=>{\n//     setLoginAPI.authLogin(login,password)\n//         .then((response:any)=>{\n//             // if (response.data.resultCode === 0){\n//                 dispatch(setLoginAC(response.login,response.password))\n//             // }\n//\n//         })\n// }\n","import {applyMiddleware, combineReducers, createStore,compose} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./user-reducer\";\nimport authReducer from \"./auth-reducer\";\n// import thunkMiddleware from \"react-redux-typescript\"\n// import thunkMiddleware from \"react-redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\nimport {loginReducer} from \"./login-reducer\";\nimport appReducer from \"./app-reducer\";\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage:usersReducer,\n    auth:authReducer,\n    form:formReducer,\n    loginPage:loginReducer,\n    app:appReducer\n})\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store= createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\n));\n\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware))\nexport type AppRootStateType = ReturnType<typeof reducers>\n// @ts-ignore\nwindow.store = store;\n\nexport default store","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\n\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport ToggleIsFetching from \"./components/common/ToggleIsFetching\";\nimport store from \"./redux/redux-store\";\nimport {withSuspence} from \"./hoc/withSuspence\";\n\n// Этот компонент загружается динамически\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\n\nclass App extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.initializeAppTC()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <ToggleIsFetching/>\n        }\n        return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n\n                <div className=\"app-wrapper-content\">\n                    <Route\n                        exact\n                        path=\"/dialogs\"\n                        //вариант загрузки DialogsComponent с HOC withSuspence\n                        render={withSuspence(DialogsContainer)}\n                    />\n\n                    <Route\n                        path='/profile/:userId?'\n                        render={() =>\n                            //вариант загрузки DialogsComponent без HOC withSuspence\n                            <React.Suspense fallback={<ToggleIsFetching/>}>\n                                <div>\n                                    <ProfileContainer/>\n                                </div>\n                            </React.Suspense>\n                        }\n                    />\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n\n                    <Route path=\"/news\" component={News}/>\n                    <Route path=\"/music\" component={Music}/>\n                    <Route path=\"/settings\" component={Settings}/>\n\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    initialized: state.app.initialized\n})\n\nexport let AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeAppTC}))(App);\n\nexport const SocialTSApp = (props: any) => {\n    return (<HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>)\n}\n\n","import React from \"react\";\nimport ToggleIsFetching from \"../components/common/ToggleIsFetching\";\n\n\nexport const withSuspence = (Component: any) => {\n\n    return (props: any) => {\n\n    return <React.Suspense fallback={<ToggleIsFetching/>}>\n        <div>\n            <Component {...props}/>\n        </div>\n    </React.Suspense>\n}\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {SocialTSApp} from \"./App\";\n\n// import store from \"./redux/redux-store\"\n// import {BrowserRouter} from \"react-router-dom\";\n// import {Provider} from \"react-redux\";\n\n\n\nReactDOM.render(\n  <SocialTSApp/>, document.getElementById(\"root\"));\n\n\n\n","import React from \"react\";\nimport preLoader from \"../assets/images/loader.svg\";\n\nfunction ToggleIsFetching() {\nreturn (<div>\n    <img src={preLoader}/>\n</div>)\n}\n\n\nexport default ToggleIsFetching","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2SPvv\",\"error\":\"FormControls_error__3zfBa\",\"formSummaryError\":\"FormControls_formSummaryError__2ffxR\"};","import {postsType} from \"../components/Profile/MyPosts/MyPosts\"\nimport {postsTypeState} from \"./state\";\nimport {profileAPI, userAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\"\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\nconst SET_STATUS_PROFILE = \"SET_STATUS_PROFILE\"\nconst SET_STATUS_UPDATE = \"SET_STATUS_UPDATE\"\nconst DELETE_POST = \"DELETE_POST\"\n\n\nlet initialState: postsTypeState = {\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", countLikes: 10},\n        {id: 2, message: \"Hi, how are you?\", countLikes: 133},\n        {id: 3, message: \"Hi, how are you?\", countLikes: 4432},\n    ],\n    profile: null,\n    status: \"\"\n}\n\n\nfunction profileReducer(state: postsTypeState = initialState, action: ProfileActionTypes): postsTypeState {\n    switch (action.type) {\n        case ADD_POST: {\n\n            let newPost: postsType = {\n                id: 5,\n                message: action.newPostText,\n                countLikes: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case SET_STATUS_PROFILE: {\n            return {...state, status: action.status}\n        }\n        case SET_STATUS_UPDATE: {\n            return {...state, status: action.status}\n        }\n        case DELETE_POST: {\n\n\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        }\n\n\n        default:\n            return state\n    }\n\n\n}\n\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({type: ADD_POST, newPostText})\n\n\nexport const setUserProfile = (profile: any): setUserProfileType => ({\n    type: SET_USER_PROFILE, profile: profile\n})\n\nexport const setStatusProfile = (status: string): setStatusProfileType => ({\n    type: SET_STATUS_PROFILE, status\n})\nexport const setStatusUpdate = (status: string): setStatusUpdateType => ({\n    type: SET_STATUS_UPDATE, status\n})\nexport const deletePostAC = (postId: number): deletePostType => ({\n    type: DELETE_POST, postId\n})\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    let response = await userAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n\n}\n\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatusProfile(response.data))\n\n}\nexport const getUpdateUserStatus = (status: string) => async (dispatch: any) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatusUpdate(status))\n    }\n\n\n}\n\nexport type ProfileActionTypes =\n    AddPostActionCreatorType\n    | setUserProfileType\n    | setStatusProfileType\n    | setStatusUpdateType\n    | deletePostType\n\n\ntype setStatusUpdateType = {\n    type: typeof SET_STATUS_UPDATE\n    status: string\n}\ntype deletePostType = {\n    type: typeof DELETE_POST\n    postId: number\n}\ntype setStatusProfileType = {\n    type: typeof SET_STATUS_PROFILE\n    status: string\n}\ntype setUserProfileType = {\n    type: typeof SET_USER_PROFILE\n    profile: any\n}\ntype AddPostActionCreatorType = {\n    type: typeof ADD_POST\n    newPostText: string\n}\n\n\nexport default profileReducer","import {stateType, dialogsTypeState} from \"./state\"\n\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\"\nconst ADD_MESSAGE = \"ADD-MESSAGE\"\n\nlet initialState = {\n\n    dialogs: [\n        {id: 1, name: \"Artemy\"},\n        {id: 2, name: \"Alevtina\"},\n        {id: 3, name: \"Akseniya\"},\n        {id: 4, name: \"Afonasii\"},\n        {id: 5, name: \"Belanton\"},\n        {id: 6, name: \"Stephan\"},\n        {id: 7, name: \"Stephan\"},\n        {id: 8, name: \"Stephan\"},\n        {id: 9, name: \"Stephan\"},\n    ],\n    messages: [\n        {id: 1, message: \"Halllooo?\"},\n        // { id: 2, message: \"Hey how are you?\" },\n        // { id: 3, message: \"Hey how are you?\" },\n\n    ],\n    newMessageText: \"\"\n\n}\n\n\nfunction dialogsReducer(state: dialogsTypeState = initialState, action: DialogsActionType): dialogsTypeState {\n    let stateCopy;\n\n\n\n    switch (action.type) {\n        // case UPDATE_NEW_MESSAGE_TEXT: {\n        //     stateCopy = {\n        //         ...state,\n        //         newMessageText: action.newMessageText1\n        //     };\n        //     return stateCopy\n        // }\n        case ADD_MESSAGE: {\n\n            let newMessage = action.newMessageText\n            let stateCopy = {\n                ...state,\n                newMessageText: \"\",\n                messages: [...state.messages, {id: 77, message: newMessage}]\n\n            };\n            // let newMessage = {\n            //     id: 77,\n            //     message: state.newMessageText\n            // }\n            return stateCopy\n        }\n        default:\n            return state\n    }\n\n}\n\nexport type DialogsActionType = AddMessageCreatorType\n    // UpdateNEwMessageTextCreator\n\ntype AddMessageCreatorType = {\n    type: typeof ADD_MESSAGE\n    newMessageText:string\n}\n// type UpdateNEwMessageTextCreator = {\n//     type: typeof UPDATE_NEW_MESSAGE_TEXT;\n//     newMessageText1: string\n// }\n\nexport const addMessageCreator = (newMessageText:string): AddMessageCreatorType => ({type: ADD_MESSAGE,newMessageText})\n\n// export const updateNEwMessageTextCreator = (text: string): UpdateNEwMessageTextCreator => ({\n//     type: UPDATE_NEW_MESSAGE_TEXT, newMessageText1: text,\n// })\n\nexport default dialogsReducer","import React from \"react\";\nimport styles from './FormControls.module.css'\n\nexport const Textarea = ({input,meta,...props}:any)=>{\n    const hasError =meta.touched && meta.error\n    return(\n        <div className={styles.formControl + \" \" +(hasError ?styles.error:\" \") }>\n            <div>\n                <textarea{...input} {...props}/>\n            </div>\n            { hasError &&   <span>{meta.error}</span>}\n\n\n        </div>\n    )\n}\n\nexport const Input = ({input,meta:{touched,error},...props}:any)=>{\n    const hasError =touched && error\n    return(\n        <div className={styles.formControl + \" \" +(hasError ?styles.error:\" \") }>\n            <div>\n                <input{...input} {...props} />\n            </div>\n            { hasError &&   <span>{error}</span>}\n\n\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"icon\":\"Header_icon__2vvCF\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","export const required = (value:any) =>{\nif (value)return undefined;\nreturn 'Field required'\n}\n\n\n\nexport const  maxLengthCreator = (maxLength:any)=>(value:string)=>{\n    if (value.length > maxLength)return `Max lenght is ${maxLength} symbols`\n    return undefined\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__1oWzK\",\"pages\":\"Paginator_pages__1p_3u\"};"],"sourceRoot":""}